{
    "openapi": "3.1.0",
    "info": {
        "title": "ArtPort",
        "version": "0.0.1"
    },
    "servers": [
        {
            "url": "http://app.artport.co/api"
        }
    ],
    "paths": {
        "/v1/addresses": {
            "get": {
                "operationId": "addresses.list",
                "description": "List each of the addresses in your organization's address book.",
                "tags": [
                    "Address"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to return (15 records per page).",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ],
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `Address`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Address"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "post": {
                "operationId": "addresses.store",
                "summary": "Store a new address",
                "tags": [
                    "Address"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "id"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/v1/addresses/verify": {
            "get": {
                "operationId": "addresses.verify",
                "summary": "Determine if an address is acceptable",
                "tags": [
                    "Address"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 50
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email",
                            "minLength": 6,
                            "maxLength": 100
                        }
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 7,
                            "maxLength": 30
                        }
                    },
                    {
                        "name": "line_1",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 35
                        }
                    },
                    {
                        "name": "line_2",
                        "in": "query",
                        "schema": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "minLength": 2,
                            "maxLength": 35
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 35
                        }
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 30
                        }
                    },
                    {
                        "name": "post_code",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 16
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Country"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "": {
                                            "type": "string"
                                        },
                                        "recommended": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        null,
                                        "recommended",
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/v1/addresses/{address}": {
            "get": {
                "operationId": "addresses.find",
                "tags": [
                    "Address"
                ],
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "patch": {
                "operationId": "addresses.update",
                "summary": "Update the given address",
                "tags": [
                    "Address"
                ],
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "description": "The address ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "addresses.delete",
                "summary": "Delete the given address",
                "tags": [
                    "Address"
                ],
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "description": "The address ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Address": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "email": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "phone": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "line_1": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "line_2": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "city": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "region": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "post_code": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "country": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "email",
                    "phone",
                    "line_1",
                    "line_2",
                    "city",
                    "region",
                    "post_code",
                    "country"
                ],
                "title": "Address"
            },
            "Country": {
                "type": "integer",
                "enum": [
                    1
                ],
                "title": "Country"
            },
            "StoreRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "minLength": 6,
                        "maxLength": 100
                    },
                    "phone": {
                        "type": "string",
                        "minLength": 7,
                        "maxLength": 30
                    },
                    "line_1": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 35
                    },
                    "line_2": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 2,
                        "maxLength": 35
                    },
                    "city": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 35
                    },
                    "region": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 30
                    },
                    "post_code": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 16
                    },
                    "country": {
                        "$ref": "#/components/schemas/Country"
                    }
                },
                "required": [
                    "name",
                    "email",
                    "phone",
                    "line_1",
                    "city",
                    "region",
                    "post_code",
                    "country"
                ],
                "title": "StoreRequest"
            },
            "UpdateRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 50
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "minLength": 6,
                        "maxLength": 100
                    },
                    "phone": {
                        "type": "string",
                        "minLength": 7,
                        "maxLength": 30
                    },
                    "line_1": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 35
                    },
                    "line_2": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 2,
                        "maxLength": 35
                    },
                    "city": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 35
                    },
                    "region": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 30
                    },
                    "post_code": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 16
                    },
                    "country": {
                        "$ref": "#/components/schemas/Country"
                    }
                },
                "required": [
                    "name",
                    "email",
                    "phone",
                    "line_1",
                    "city",
                    "region",
                    "post_code",
                    "country"
                ],
                "title": "UpdateRequest"
            }
        },
        "responses": {
            "AuthenticationException": {
                "description": "Unauthenticated",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "ValidationException": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Errors overview."
                                },
                                "errors": {
                                    "type": "object",
                                    "description": "A detailed description of each field that failed validation.",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "message",
                                "errors"
                            ]
                        }
                    }
                }
            },
            "AuthorizationException": {
                "description": "Authorization error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "ModelNotFoundException": {
                "description": "Not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            }
        }
    }
}